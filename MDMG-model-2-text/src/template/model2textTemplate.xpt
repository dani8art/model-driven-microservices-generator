«IMPORT kubernetes»

«DEFINE main FOR kubernetes::Kubernetes»
«FILE 'deploy.sh'»#! /bin/bash
«FOREACH this.services AS ser SEPARATOR '\n'»bash ./«ser.name»/create-«ser.name».sh«ENDFOREACH»
«ENDFILE»

«FILE 'deploy.bat'»«FOREACH this.services AS ser SEPARATOR '\n'»bash ./«ser.name»/create-«ser.name».sh«ENDFOREACH»
«ENDFILE»

«EXPAND deploymentFileTemplate FOREACH services»
«EXPAND createFiles FOREACH services»
«EXPAND replicationFileTemplate FOREACH services»
«EXPAND serviceFileTemplate FOREACH services»
«ENDDEFINE»


«DEFINE createFiles FOR Service»
«FILE this.name+'/create-'+this.name+".bat"»
kubectl create -f ./«this.name»/«this.name»-deployment.yaml
kubectl create -f ./«this.name»/«this.name»-service.yaml
«ENDFILE»

«FILE this.name+'/create-'+this.name+".sh"»
#! /bin/bash
kubectl create -f ./«this.name»/«this.name»-deployment.yaml
kubectl create -f ./«this.name»/«this.name»-service.yaml
«ENDFILE»
«ENDDEFINE»

«DEFINE deploymentFileTemplate FOR Service»
«FILE this.name+'/'+this.name+"-deployment.yaml"»
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: «this.name»
spec:
  replicas: 1
  template: 
    metadata:
      labels:
        «FOREACH this.deployment.labels AS lab SEPARATOR '\n'»name: «lab.key»«ENDFOREACH»
    spec:
      «IF this.deployment.containers.size!=0»containers:
      «FOREACH this.deployment.containers AS cont SEPARATOR '\n'»- image: «cont.image»
        name: «cont.name»
        imagePullPolicy: Always
        ports:
        - name: «cont.name»
          containerPort: «cont.containerPort»
      	«IF cont.environments.size!=0»env:
      	«FOREACH cont.environments AS env SEPARATOR '\n'»- name: «env.name»
          value: «env.value»
          «ENDFOREACH»
   		  «ENDIF»
      «ENDFOREACH»
      «ENDIF»        
«ENDFILE»
«ENDDEFINE»

«DEFINE replicationFileTemplate FOR Service»
«FILE this.name+'/'+this.name+"-rc.yaml"»
apiVersion: v1
kind: ReplicationController
metadata:
  name: «this.name»
spec:
  replicas: 1
  template: 
    metadata:
      labels:
        «FOREACH this.deployment.labels AS lab SEPARATOR '\n'»name: «lab.key»«ENDFOREACH»
    spec:
      «IF this.deployment.containers.size!=0»
      containers:
      «FOREACH this.deployment.containers AS cont SEPARATOR '\n'»
      - image: «cont.image»
        name: «cont.name»
        ports:
	      - name: «cont.name»
	        containerPort: «cont.containerPort»
	 	«IF cont.environments.size!=0»env:
      	«FOREACH cont.environments AS env SEPARATOR '\n'»- name: «env.name»
          value: «env.value»
          «ENDFOREACH»
   		  «ENDIF»
      «ENDFOREACH»
      «ENDIF»        
«ENDFILE»
«ENDDEFINE»

«DEFINE serviceFileTemplate FOR Service»
«FILE this.name+'/'+this.name+"-service.yaml"»
apiVersion: v1
kind: Service
metadata:
  name: «this.name»
  labels:
  «FOREACH this.deployment.labels AS lab SEPARATOR '\n'»name: «lab.key»«ENDFOREACH»  
spec:
  type: «this.type»
    ports:
	  - port: «this.port»
	    targetPort: «this.targetPort»
	    nodePort: «this.port»
	    protocol: TCP
    selector:
	  name: «this.name»     
«ENDFILE»
«ENDDEFINE»


